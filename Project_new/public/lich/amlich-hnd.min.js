var ABOUT = "Âm lịch Việt Nam - Version 0.8" + "\n© 2004 Hồ Ngọc Đức [http://come.to/duc]"; var TK19 = new Array(3193507, 5679952, 4336544, 2927457, 5415792, 3953128, 6345056, 4908208, 3631398, 5823136, 4479824, 3217106, 5647072, 4104928, 2679506, 5163344, 3724630, 6075680, 4634256, 3300772, 5789136, 4335056, 2926003, 5415600, 4040887, 6334800, 4895904, 3519141, 5942608, 4478384, 3156852, 5645680, 4215545, 6574768, 5138768, 3698006, 6183584, 4631376, 3299028, 5786336, 4367728, 2966867, 5296800, 3926183, 6346064, 4872864, 3452325, 5936592, 4606688, 3058356, 5547216, 4117176, 6599312, 5027152, 3692375, 6172064, 4756944, 3296629, 5786032, 4367536, 2991283, 5270160, 3845528, 6318928, 4991840, 3511141, 5935984, 4606320, 3172708, 5432480, 3992170, 6478480, 5135056, 3746518, 6171360, 4756192, 3328725, 5687632, 4248736, 2872483, 5289616, 3823527, 6313392, 4990416, 3577269, 5935792, 4499792, 3070292, 5551264, 3978576, 2648914, 5133744, 3811190, 6169968, 4739760, 3320485, 5695824, 4221600, 2800291, 5286736); var TK20 = new Array(3951576, 6441696, 5023088, 3691733, 6083168, 4512080, 3233108, 5658272, 4233936, 2774482, 5262048, 3843510, 6333648, 4772432, 3396181, 5813568, 4380320, 2928034, 5412272, 4147575, 6572400, 5022896, 3585205, 6056528, 4615504, 3222356, 5647200, 4232560, 2904818, 5261680, 3827046, 6214816, 4778576, 3369621, 5790416, 4467552, 3114723, 5411552, 4049111, 6474064, 5035168, 3528870, 5944656, 4609696, 3253684, 5645776, 4231888, 2806450, 5286224, 3716439, 6188192, 4765008, 3494741, 5787040, 4367792, 3097971, 5526192, 3975592, 6351184, 5008032, 3583654, 5942096, 4606816, 3189476, 5678448, 4215392, 2683491, 5167424, 3726151, 6084256, 4757200, 3427797, 5917392, 4367568, 2938036, 5419600, 3986776, 6337856, 4896160, 3626406, 6067632, 4606384, 3189108, 5678256, 4237904, 2730578, 5139744, 3779911, 6204256, 4756336, 3427061, 5917040, 4482224, 2913443, 5302864, 4024920, 6444704, 4893392, 3577557, 6066912); var TK21 = new Array(4639072, 3070292, 5559456, 4119120, 2782546, 5133984, 3712935, 6202832, 4887216, 3320501, 5810512, 4371616, 2931364, 5287248, 3954137, 6441888, 5023152, 3625334, 6050416, 4614448, 3176756, 5532320, 4107600, 2775890, 5262176, 3712742, 6202592, 4772448, 3336805, 5690656, 4250272, 2971299, 5396176, 3951355, 6441424, 5022928, 3657910, 5943888, 4502816, 3071269, 5551520, 4085200, 2774450, 5261744, 3843447, 6202544, 4762192, 3387989, 5795104, 4238688, 2968419, 5395312, 4082152, 6343024, 5002416, 3631270, 5954128, 4479648, 3122852, 5548752, 4215520, 2675427, 5163344, 3724631, 6214816, 4643152, 3300693, 5789344, 4368080, 2905556, 5395120, 3975608, 6465840, 4895888, 3454630, 5942608, 4609440, 3058532, 5547376, 4215472, 2797939, 5138736, 3697463, 6187680, 4762960, 3353301, 5778272, 4367728, 3035876, 5296480, 3860824, 6346016, 4905616, 3496614, 5920464, 4598496, 3189204, 5546704, 4116816, 2681170); var TK22 = new Array(5158176, 3725095, 6204832, 4871600, 3550645, 5916080, 4498096, 3060404, 5548368, 3978585, 6449952, 5025104, 3692390, 6050672, 4736368, 3302772, 5788336, 4221264, 2783571, 5266080, 3910311, 6203088, 4868832, 3515109, 5940560, 4379296, 3007140, 5428560, 4086459, 6444704, 5019344, 3754422, 6179504, 4630736, 3200181, 5681808, 4240720, 2780498, 5262752, 3904871, 6329712, 4868528, 3451253, 5924016, 4483728, 2931348, 5401424, 4074336, 2665313, 5018992, 3689190, 6082912, 4646048, 3075365, 5560976, 4217680, 2897619, 5253856, 3838935, 6329040, 4901200, 3331414, 5813408, 4372112, 3038612, 5395888, 4072954, 6563248, 5149360, 3582646, 6056272, 4617376, 3256997, 5549392, 4216224, 2796403, 5383536, 3822455, 6312624, 4876624, 3435862, 5790368, 4369232, 3036884, 5524192, 3974512, 2647250, 5034592, 3599014, 5952848, 4610720, 3190181, 5674448, 4213456, 2795955, 5285072, 3855031, 6206032, 4764992, 3396950); var CAN = new Array("Giáp", "Ất", "Bính", "Đinh", "Mậu", "Kỷ", "Canh", "Tân", "Nhâm", "Quý"); var CHI = new Array("Tý", "Sửu", "Dần", "Mão", "Thìn", "Tỵ", "Ngọ", "Mùi", "Thân", "Dậu", "Tuất", "Hợi"); var TUAN = new Array("Chủ nhật", "Thứ hai", "Thứ ba", "Thứ tư", "Thứ năm", "Thứ sáu", "Thứ bảy"); var GIO_HD = new Array("110100101100", "001101001011", "110011010010", "101100110100", "001011001101", "010010110011"); var TIETKHI = new Array("Xuân phân", "Thanh minh", "Cốc vũ", "Lập hạ", "Tiểu mãn", "Mang chủng", "Hạ chí", "Tiểu thử", "Đại thử", "Lập thu", "Xử thử", "Bạch lộ", "Thu phân", "Hàn lộ", "Sương giáng", "Lập đông", "Tiểu tuyết", "Đại tuyết", "Đông chí", "Tiểu hàn", "Đại hàn", "Lập xuân", "Vũ Thủy", "Kinh trập"); function LunarDate(dd, mm, yy, leap, jd) { this.day = dd; this.month = mm; this.year = yy; this.leap = leap; this.jd = jd } var PI = Math.PI; function INT(d) { return Math.floor(d) } function jdn(dd, mm, yy) { var a = INT((14 - mm) / 12); var y = yy + 4800 - a; var m = mm + 12 * a - 3; var jd = dd + INT((153 * m + 2) / 5) + 365 * y + INT(y / 4) - INT(y / 100) + INT(y / 400) - 32045; return jd } function jdn2date(jd) { var Z, A, alpha, B, C, D, E, dd, mm, yyyy, F; Z = jd; if (Z < 2299161) { A = Z } else { alpha = INT((Z - 1867216.25) / 36524.25); A = Z + 1 + alpha - INT(alpha / 4) } B = A + 1524; C = INT((B - 122.1) / 365.25); D = INT(365.25 * C); E = INT((B - D) / 30.6001); dd = INT(B - D - INT(30.6001 * E)); if (E < 14) { mm = E - 1 } else { mm = E - 13 } if (mm < 3) { yyyy = C - 4715 } else { yyyy = C - 4716 } return new Array(dd, mm, yyyy) } function decodeLunarYear(yy, k) { var monthLengths, regularMonths, offsetOfTet, leapMonth, leapMonthLength, solarNY, currentJD, j, mm; var ly = new Array; monthLengths = new Array(29, 30); regularMonths = new Array(12); offsetOfTet = k >> 17; leapMonth = k & 15; leapMonthLength = monthLengths[k >> 16 & 1]; solarNY = jdn(1, 1, yy); currentJD = solarNY + offsetOfTet; j = k >> 4; for (i = 0; i < 12; i++) { regularMonths[12 - i - 1] = monthLengths[j & 1]; j >>= 1 } if (leapMonth == 0) { for (mm = 1; mm <= 12; mm++) { ly.push(new LunarDate(1, mm, yy, 0, currentJD)); currentJD += regularMonths[mm - 1] } } else { for (mm = 1; mm <= leapMonth; mm++) { ly.push(new LunarDate(1, mm, yy, 0, currentJD)); currentJD += regularMonths[mm - 1] } ly.push(new LunarDate(1, leapMonth, yy, 1, currentJD)); currentJD += leapMonthLength; for (mm = leapMonth + 1; mm <= 12; mm++) { ly.push(new LunarDate(1, mm, yy, 0, currentJD)); currentJD += regularMonths[mm - 1] } } return ly } function getYearInfo(yyyy) { var yearCode; if (yyyy < 1900) { yearCode = TK19[yyyy - 1800] } else if (yyyy < 2e3) { yearCode = TK20[yyyy - 1900] } else if (yyyy < 2100) { yearCode = TK21[yyyy - 2e3] } else { yearCode = TK22[yyyy - 2100] } return decodeLunarYear(yyyy, yearCode) } var FIRST_DAY = jdn(25, 1, 1800); var LAST_DAY = jdn(31, 12, 2199); function findLunarDate(jd, ly) { if (jd > LAST_DAY || jd < FIRST_DAY || ly[0].jd > jd) { return new LunarDate(0, 0, 0, 0, jd) } var i = ly.length - 1; while (jd < ly[i].jd) { i-- } var off = jd - ly[i].jd; ret = new LunarDate(ly[i].day + off, ly[i].month, ly[i].year, ly[i].leap, jd); return ret } function getLunarDate(dd, mm, yyyy) { var ly, jd; if (yyyy < 1800 || 2199 < yyyy) { } ly = getYearInfo(yyyy); jd = jdn(dd, mm, yyyy); if (jd < ly[0].jd) { ly = getYearInfo(yyyy - 1) } return findLunarDate(jd, ly) } function SunLongitude(jdn) { var T, T2, dr, M, L0, DL, L; T = (jdn - 2451545) / 36525; T2 = T * T; dr = PI / 180; M = 357.5291 + 35999.0503 * T - 1559e-7 * T2 - 48e-8 * T * T2; L0 = 280.46645 + 36000.76983 * T + 3032e-7 * T2; DL = (1.9146 - .004817 * T - 14e-6 * T2) * Math.sin(dr * M); DL = DL + (.019993 - 101e-6 * T) * Math.sin(dr * 2 * M) + 29e-5 * Math.sin(dr * 3 * M); L = L0 + DL; L = L * dr; L = L - PI * 2 * INT(L / (PI * 2)); return L } function getSunLongitude(dayNumber, timeZone) { return INT(SunLongitude(dayNumber - .5 - timeZone / 24) / PI * 12) } var today = new Date; var currentLunarDate = getLunarDate(today.getDate(), today.getMonth() + 1, today.getFullYear()); var currentMonth = today.getMonth() + 1; var currentYear = today.getFullYear(); function parseQuery(q) { var ret = new Array; if (q.length < 2) return ret; var s = q.substring(1, q.length); var arr = s.split("&"); var i, j; for (i = 0; i < arr.length; i++) { var a = arr[i].split("="); for (j = 0; j < a.length; j++) { ret.push(a[j]) } } return ret } function getSelectedMonth() { var query = window.location.search; var arr = parseQuery(query); var idx; for (idx = 0; idx < arr.length; idx++) { if (arr[idx] == "mm") { currentMonth = parseInt(arr[idx + 1]) } else if (arr[idx] == "yy") { currentYear = parseInt(arr[idx + 1]) } } } function getMonth(mm, yy) { var ly1, ly2, tet1, jd1, jd2, mm1, yy1, result, i; if (mm < 12) { mm1 = mm + 1; yy1 = yy } else { mm1 = 1; yy1 = yy + 1 } jd1 = jdn(1, mm, yy); jd2 = jdn(1, mm1, yy1); ly1 = getYearInfo(yy); tet1 = ly1[0].jd; result = new Array; if (tet1 <= jd1) { for (i = jd1; i < jd2; i++) { result.push(findLunarDate(i, ly1)) } } else if (jd1 < tet1 && jd2 < tet1) { ly1 = getYearInfo(yy - 1); for (i = jd1; i < jd2; i++) { result.push(findLunarDate(i, ly1)) } } else if (jd1 < tet1 && tet1 <= jd2) { ly2 = getYearInfo(yy - 1); for (i = jd1; i < tet1; i++) { result.push(findLunarDate(i, ly2)) } for (i = tet1; i < jd2; i++) { result.push(findLunarDate(i, ly1)) } } return result } function getDayName(lunarDate) { if (lunarDate.day == 0) { return "" } var cc = getCanChi(lunarDate); var s = "- Ngày <strong>" + cc[0] + "</strong>, tháng <strong>" + cc[1] + "</strong>, năm <strong>" + cc[2] + "</strong>"; return s } function getYearCanChi(year) { return CAN[(year + 6) % 10] + " " + CHI[(year + 8) % 12] } function getCanHour0(jdn) { return CAN[(jdn - 1) * 2 % 10] } function getCanChi(lunar) { var dayName, monthName, yearName; dayName = CAN[(lunar.jd + 9) % 10] + " " + CHI[(lunar.jd + 1) % 12]; monthName = CAN[(lunar.year * 12 + lunar.month + 3) % 10] + " " + CHI[(lunar.month + 1) % 12]; if (lunar.leap == 1) { monthName += " (nhuận)" } yearName = getYearCanChi(lunar.year); return new Array(dayName, monthName, yearName) } function getDayString(lunar, solarDay, solarMonth, solarYear) { var s; var dayOfWeek = TUAN[(lunar.jd + 1) % 7]; s = "- " + dayOfWeek + " " + solarDay + "/" + solarMonth + "/" + solarYear; s += " -+- "; s = s + "Ngày " + lunar.day + " tháng " + lunar.month; if (lunar.leap == 1) { s = s + " nhuận" } return s } function getTodayString() { var s = getDayString(currentLunarDate, today.getDate(), today.getMonth() + 1, today.getFullYear()); s += " năm " + getYearCanChi(currentLunarDate.year); return s } function getCurrentTime() { today = new Date; var Std = today.getHours(); var Min = today.getMinutes(); var Sec = today.getSeconds(); var s1 = Std < 10 ? "0" + Std : Std; var s2 = Min < 10 ? "0" + Min : Min; return s1 + ":" + s2 } function getGioHoangDao(jd) { var chiOfDay = (jd + 1) % 12; var gioHD = GIO_HD[chiOfDay % 6]; var ret = ""; var count = 0; for (var i = 0; i < 12; i++) { if (gioHD.charAt(i) == "1") { ret += CHI[i]; ret += " (" + (i * 2 + 23) % 24 + "-" + (i * 2 + 1) % 24 + ")"; if (count++ < 5) ret += ", "; if (count == 3) ret += "\n" } } return ret } var DAYNAMES = new Array("CN", "T2", "T3", "T4", "T5", "T6", "T7"); var PRINT_OPTS = new OutputOptions; var FONT_SIZES = new Array("9pt", "13pt", "17pt"); var TAB_WIDTHS = new Array("180px", "420px", "600px"); function OutputOptions() { this.fontSize = "13pt"; this.tableWidth = "420px" } function setOutputSize(size) { var idx = 1; if (size == "small") { idx = 0 } else if (size == "big") { idx = 2 } else { idx = 1 } PRINT_OPTS.fontSize = FONT_SIZES[idx]; PRINT_OPTS.tableWidth = TAB_WIDTHS[idx] } function printSelectedMonth() { getSelectedMonth(); return printMonth(currentMonth, currentYear) } function printMonth(mm, yy) { var res = ""; res += printStyle(); res += printTable(mm, yy); res += printFoot(); return res } function printYear(yy) { var yearName = "N&#x103;m " + getYearCanChi(yy) + " " + yy; var res = ""; res += printStyle(); res += "<table align=center>\n"; res += '<tr><td colspan="3" class="tennam" onClick="showYearSelect();">' + yearName + "</td></tr>\n"; for (var i = 1; i <= 12; i++) { if (i % 3 == 1) res += "<tr>\n"; res += "<td>\n"; res += printTable(i, yy); res += "</td>\n"; if (i % 3 == 0) res += "</tr>\n" } res += "<table>\n"; res += printFoot(); return res } function printSelectedYear() { getSelectedMonth(); return printYear(currentYear) } function printStyle() { var fontSize = PRINT_OPTS.fontSize; var res = ""; res += '<style type="text/css">\n'; res += "\x3c!--\n"; res += "  .tennam {text-align:center; font-size:150%; line-height:120%; font-weight:bold; color:#FAACA8}\n"; res += "  .thang {font-size: " + fontSize + "; padding:1; line-height:100%; font-family:Tahoma,Verdana,Arial; table-layout:fixed}\n"; res += "  .tenthang {text-align:center; font-size:125%; line-height:100%; font-weight:bold; color:#FAACA8; background-color: rgba(248, 180, 194, 0.1)}\n"; res += "  .navi-l {text-align:center; font-size:75%; line-height:100%; font-family:Verdana,Times New Roman,Arial; font-weight:bold; color:red,; background-color: rgba(248, 180, 194, 0.1)}\n"; res += "  .navi-r {text-align:center; font-size:75%; line-height:100%; font-family:Verdana,Arial,Times New Roman; font-weight:bold; color:#FAACA8,; background-color: rgba(248, 180, 194, 0.1)}\n"; res += "  .ngaytuan {width:14%; text-align:center; font-size:125%; line-height:100%; color:#FAACA8; background-color: rgba(248, 180, 194, 0.1)}\n"; res += "  .ngaythang {color: #FAACA8; background-color: rgba(248, 180, 194, 0.1)}\n"; res += "  .homnay {background-color:#d6827e}\n"; res += "  .tet {background-color:#FFCC99}\n"; res += "  .am {text-align:right;font-size:75%;line-height:100%;color:yellow}\n"; res += "  .am2 {text-align:right;font-size:75%;line-height:100%;color:#004080; background-color: rgba(248, 180, 194, 0.1)}\n"; res += "  .t2t6 {text-align:left;font-size:125%;color:#FAACA8; background-color: rgba(248, 180, 194, 0.1)}\n"; res += "  .t7 {text-align:left;font-size:125%;line-height:100%;color:green}\n"; res += "  .cn {text-align:left;font-size:125%;line-height:100%;color:red}\n"; res += "--\x3e\n"; res += "</style>\n"; return res } function printTable(mm, yy) { var i, j, k, solar, lunar, cellClass, solarClass, lunarClass; var currentMonth = getMonth(mm, yy); if (currentMonth.length == 0) return; var ld1 = currentMonth[0]; var emptyCells = (ld1.jd + 1) % 7; var MonthHead = mm + "/" + yy; var LunarHead = getYearCanChi(ld1.year); var res = ""; res += '<table class="thang" style="border: 2px solid #FAACA8" border="2" cellpadding="1" cellspacing="1" width="' + PRINT_OPTS.tableWidth + '">\n'; res += printHead(mm, yy); for (i = 0; i < 6; i++) { res += "<tr>\n"; for (j = 0; j < 7; j++) { k = 7 * i + j; if (k < emptyCells || k >= emptyCells + currentMonth.length) { res += printEmptyCell() } else { solar = k - emptyCells + 1; ld1 = currentMonth[k - emptyCells]; res += printCell(ld1, solar, mm, yy) } } res += "</tr>\n" } res += "</table>\n"; return res } function getPrevMonthLink(mm, yy) { var mm1 = mm > 1 ? mm - 1 : 12; var yy1 = mm > 1 ? yy : yy - 1; return '<a style="color: #FAACA8; text-decoration: none;" href="' + window.location.pathname + "?yy=" + yy1 + "&mm=" + mm1 + '">&lt;</a>' } function getNextMonthLink(mm, yy) { var mm1 = mm < 12 ? mm + 1 : 1; var yy1 = mm < 12 ? yy : yy + 1; return '<a style="color: #FAACA8; text-decoration: none;" href="' + window.location.pathname + "?yy=" + yy1 + "&mm=" + mm1 + '">&gt;</a>' } function getPrevYearLink(mm, yy) { return '<a style="color: #FAACA8; text-decoration: none;" href="' + window.location.pathname + "?yy=" + (yy - 1) + "&mm=" + mm + '">&lt;&lt;</a>' } function getNextYearLink(mm, yy) { return '<a style="color: #FAACA8; text-decoration: none;" href="' + window.location.pathname + "?yy=" + (yy + 1) + "&mm=" + mm + '">&gt;&gt;</a>' } function printHead(mm, yy) { var res = ""; var monthName = mm + "/" + yy; res += '<tr><td colspan="2" class="navi-l">' + getPrevYearLink(mm, yy) + " &nbsp;" + getPrevMonthLink(mm, yy) + "</td>\n"; res += '<td colspan="3" class="tenthang" onClick="showMonthSelect();">' + monthName + "</td>\n"; res += '<td colspan="2" class="navi-r">' + getNextMonthLink(mm, yy) + " &nbsp;" + getNextYearLink(mm, yy) + "</td></tr>\n"; res += '<tr onClick="alertAbout();">\n'; for (var i = 0; i <= 6; i++) { res += "<td class=ngaytuan>" + DAYNAMES[i] + "</td>\n" } res += "</tr>\n"; return res } function printEmptyCell() { return "<td class=ngaythang><div class=cn>&nbsp;</div> <div class=am>&nbsp;</div></td>\n" } function printCell(lunarDate, solarDate, solarMonth, solarYear) { var cellClass, solarClass, lunarClass, solarColor; cellClass = "ngaythang"; solarClass = "t2t6"; lunarClass = "am"; solarColor = "#"; var dow = (lunarDate.jd + 1) % 7; if (dow == 0) { solarClass = "cn"; solarColor = "red" } else if (dow == 6) { solarClass = "t7"; solarColor = "green" } if (solarDate == today.getDate() && solarMonth == today.getMonth() + 1 && solarYear == today.getFullYear()) { cellClass = "homnay" } if (lunarDate.day == 1 && lunarDate.month == 1) { cellClass = "tet" } if (lunarDate.leap == 1) { lunarClass = "am2" } var lunar = lunarDate.day; if (solarDate == 1 || lunar == 1) { lunar = lunarDate.day + "/" + lunarDate.month } var res = ""; var args = lunarDate.day + "," + lunarDate.month + "," + lunarDate.year + "," + lunarDate.leap; args += "," + lunarDate.jd + "," + solarDate + "," + solarMonth + "," + solarYear; res += '<td class="' + cellClass + '"'; if (lunarDate != null) res += ' title="' + getDayName(lunarDate) + '" onClick="alertDayInfo(' + args + ');"'; res += " <div style=color:" + solarColor + ' class="' + solarClass + '">' + solarDate + '</div> <div class="' + lunarClass + '">' + lunar + "</div></td>\n"; return res } function printFoot() { var res = ""; res += '<script language="JavaScript" src="amlich-hnd.js"><\/script>\n'; return res } function showMonthSelect() { var home = "http://www.ifis.uni-luebeck.de/~duc/amlich/JavaScript/"; window.open(home, "win2702", "menubar=yes,scrollbars=yes,status=yes,toolbar=yes,resizable=yes,location=yes") } function showYearSelect() { window.print() } function infoCellSelect(id) { if (id == 0) { } } function alertDayInfo(dd, mm, yy, leap, jd, sday, smonth, syear) { var lunar = new LunarDate(dd, mm, yy, leap, jd); var s = getDayString(lunar, sday, smonth, syear); s += " âm lịch<br>"; s += getDayName(lunar); s += "<br>- <strong>Giờ đầu ngày</strong>: " + getCanHour0(jd) + " " + CHI[0]; s += "<br>- <strong>Tiết</strong>: " + TIETKHI[getSunLongitude(jd + 1, 7)]; s += "<br>- <strong>Giờ hoàng đạo</strong>: " + getGioHoangDao(jd); window.parent.postMessage({ type: "showContent", content: s }, "*") } function showVietCal() { window.status = getCurrentTime() + " -+- " + getTodayString(); window.window.setTimeout("showVietCal()", 5e3) }